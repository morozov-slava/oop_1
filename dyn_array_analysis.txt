Полагаю, что я слишком прямолинейно реализовал динамический массив и по своей сути сохранил большую часть методов в исходном виде, просто немного "отшлифовал" код в части ООП.

Основное, чему мне стоит научиться из этого примера - это более изящный подход к проектированию методов.

Основное различие в проектировании заключается в том, что в эталонном решении представлено несколько методов вставки: `put()`, `put_left()`, `put_right()`, 
которые покрывают все возможные ситуации вставки элементов. В то время как в моей реализации представлен только метод `insert()`, который не предоставляет гибкости 
  и не даёт точного понимания о том, как именно работает метод (что, пожалуй, важнее всего в данном случае).

Что касается АТД для методов, то так как структура реализация отличается от эталонной, то буду указывать по тем методам, которые по логике реализации совпадают:

- для методов `append()`, `remove()` описания совпадает с эталонным;
- для метода `get()` основная часть описания совпадает с эталонным, однако в качестве предусловия я также указал необходимость, чтоб значение индекса было положительным. 
  Хотя как будто бы нет необходимости ограничивать в значениях индекса, главное, чтоб абсолютное значение находилось в пределах размера массива.
- для метода `insert()` требуемое предусловие соблюдено.

Получается, в моей текущей реализации не реализованы все базовые полезные методы для работы со структурой данных.
